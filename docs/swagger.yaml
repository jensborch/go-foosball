basePath: /
definitions:
  AddPlayer:
    properties:
      nickname:
        type: string
      ranking:
        type: integer
    required:
    - nickname
    type: object
  AddTable:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  Color:
    properties:
      left:
        type: string
      right:
        type: string
    required:
    - left
    - right
    type: object
  CreatePlayer:
    properties:
      nickname:
        minLength: 2
        type: string
      realname:
        minLength: 2
        type: string
      rfid:
        type: string
    required:
    - nickname
    type: object
  CreateTable:
    properties:
      color:
        $ref: '#/definitions/Color'
      name:
        type: string
    required:
    - color
    - name
    type: object
  CreateTournament:
    properties:
      initial:
        type: integer
      name:
        type: string
      score:
        type: integer
    required:
    - name
    type: object
  Error:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  Game:
    properties:
      created:
        type: string
      leftPlayers:
        items:
          type: string
        type: array
      leftScore:
        type: integer
      rightPlayers:
        items:
          type: string
        type: array
      rightScore:
        type: integer
      table:
        $ref: '#/definitions/Table'
      updated:
        type: string
      winner:
        type: string
    required:
    - created
    - leftPlayers
    - leftScore
    - rightPlayers
    - rightScore
    - table
    - updated
    type: object
  GameResult:
    properties:
      leftPlayers:
        items:
          type: string
        maxItems: 2
        minItems: 1
        type: array
      rightPlayers:
        items:
          type: string
        maxItems: 2
        minItems: 1
        type: array
      winner:
        enum:
        - right
        - left
        - draw
        type: string
    required:
    - leftPlayers
    - rightPlayers
    - winner
    type: object
  GameStartEvent:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  Player:
    properties:
      created:
        type: string
      nickname:
        type: string
      realname:
        type: string
      rfid:
        type: string
      updated:
        type: string
    required:
    - created
    - nickname
    - updated
    type: object
  Table:
    properties:
      color:
        $ref: '#/definitions/Color'
      created:
        type: string
      id:
        type: integer
      name:
        type: string
      updated:
        type: string
    required:
    - color
    - created
    - id
    - name
    - updated
    type: object
  Tournament:
    properties:
      created:
        type: string
      id:
        type: integer
      initial:
        type: integer
      name:
        type: string
      score:
        type: integer
      updated:
        type: string
    required:
    - created
    - id
    - initial
    - name
    - score
    - updated
    type: object
  TournamentPlayer:
    properties:
      active:
        type: boolean
      nickname:
        type: string
      ranking:
        type: integer
      realname:
        type: string
      rfid:
        type: string
    required:
    - active
    - nickname
    type: object
  TournamentTable:
    properties:
      created:
        type: string
      id:
        type: integer
      table:
        $ref: '#/definitions/Table'
      updated:
        type: string
    required:
    - created
    - id
    - table
    - updated
    type: object
info:
  contact: {}
  description: Foosball tournament REST service.
  title: Go-foosball API
  version: "0.8"
paths:
  /games:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Get all gamne results
      tags:
      - game
  /games/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Game'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get gamne results
      tags:
      - game
  /players:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Player'
            type: array
      summary: List players
      tags:
      - player
    post:
      consumes:
      - application/json
      parameters:
      - description: Create player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/CreatePlayer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new player
      tags:
      - player
  /players/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete player
      tags:
      - player
    get:
      consumes:
      - application/json
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Player'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get player
      tags:
      - player
  /tables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Table'
            type: array
      summary: Get all tables
      tags:
      - table
  /tables/:
    post:
      consumes:
      - application/json
      parameters:
      - description: The table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/CreateTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Table'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create table
      tags:
      - table
  /tables/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Table'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get table
      tags:
      - table
  /tournaments:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Tournament'
            type: array
      summary: Get all tournaments
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: The tournament
        in: body
        name: tournament
        required: true
        schema:
          $ref: '#/definitions/CreateTournament'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tournament'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create tournament
      tags:
      - tournament
  /tournaments/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Remove tournament
      tags:
      - tournament
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tournament'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get tournament
      tags:
      - tournament
  /tournaments/{id}/events/game:
    get:
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/x-json-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameStartEvent'
      summary: Opens a web socket for tournamnent game start events
      tags:
      - events
  /tournaments/{id}/events/player:
    get:
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/x-json-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TournamentPlayer'
      summary: Opens a web socket for tournamnent player events
      tags:
      - events
  /tournaments/{id}/games:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Get all games in a tournament
      tags:
      - tournament
  /tournaments/{id}/games/random:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get random game for a tournament
      tags:
      - actions
  /tournaments/{id}/games/start:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Publishes a game start event
      tags:
      - actions
  /tournaments/{id}/players:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TournamentPlayer'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get players in tournament
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: The tournament
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/AddPlayer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TournamentPlayer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add player to tournament
      tags:
      - tournament
  /tournaments/{id}/players/{player}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Player ID
        in: path
        name: player
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Remove player from tournament
      tags:
      - tournament
  /tournaments/{id}/tables:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TournamentTable'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get tables in a tournament
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: The table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/AddTable'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/TournamentTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add table to tournament
      tags:
      - tournament
  /tournaments/{id}/tables/{table}/games:
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Table ID
        in: path
        name: table
        required: true
        type: string
      - description: Submit game results
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/GameResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Game'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Submit gamne results
      tags:
      - tournament
  /tournaments/{id}/tables/{tableId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Table ID
        in: path
        name: tableId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Remove table from tournament
      tags:
      - tournament
swagger: "2.0"
