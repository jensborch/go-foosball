basePath: /
definitions:
  model.Color:
    properties:
      left:
        type: string
      right:
        type: string
    required:
    - left
    - right
    type: object
  model.GameJson:
    properties:
      created:
        type: string
      leftPlayers:
        items:
          type: string
        type: array
      leftScore:
        type: integer
      rightPlayers:
        items:
          type: string
        type: array
      rightScore:
        type: integer
      tableId:
        type: integer
      updated:
        type: string
      winner:
        type: string
    type: object
  model.Player:
    properties:
      created:
        type: string
      id:
        type: integer
      nickname:
        type: string
      realname:
        type: string
      rfid:
        type: string
      updated:
        type: string
    required:
    - nickname
    type: object
  model.Table:
    properties:
      color:
        $ref: '#/definitions/model.Color'
      created:
        type: string
      id:
        type: integer
      name:
        type: string
      updated:
        type: string
    required:
    - color
    - name
    type: object
  model.Tournament:
    properties:
      created:
        type: string
      id:
        type: integer
      initial:
        type: integer
      name:
        type: string
      score:
        type: integer
      updated:
        type: string
    required:
    - initial
    - name
    - score
    type: object
  model.TournamentTable:
    properties:
      created:
        type: string
      id:
        type: integer
      table:
        $ref: '#/definitions/model.Table'
      updated:
        type: string
    type: object
  resources.AddPlayer2TournamentRepresenatation:
    properties:
      nickname:
        type: string
      ranking:
        type: integer
    required:
    - nickname
    type: object
  resources.CreatePlayerRequest:
    properties:
      nickname:
        type: string
      realname:
        type: string
      rfid:
        type: string
    required:
    - nickname
    type: object
  resources.CreateTableRepresentation:
    properties:
      color:
        $ref: '#/definitions/model.Color'
      name:
        type: string
    type: object
  resources.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  resources.GameRepresentation:
    properties:
      players:
        items:
          type: string
        type: array
      winner:
        type: string
    required:
    - players
    - winner
    type: object
  resources.PlayerRepresenatation:
    properties:
      active:
        type: boolean
      nickname:
        type: string
      ranking:
        type: integer
      realname:
        type: string
      rfid:
        type: string
    type: object
  resources.TableRepresentation:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  resources.TournamentCreateRepresentation:
    properties:
      initial:
        type: integer
      name:
        type: string
      score:
        type: integer
    required:
    - initial
    - name
    - score
    type: object
info:
  contact: {}
  description: Foosball tournament REST service.
  title: Go-foosball API
  version: "0.8"
paths:
  /games:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameJson'
            type: array
      summary: Get all gamne results
      tags:
      - game
  /games/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameJson'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get gamne results
      tags:
      - game
  /players:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Player'
            type: array
      summary: List players
      tags:
      - player
    post:
      consumes:
      - application/json
      parameters:
      - description: Create player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/resources.CreatePlayerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Create a new player
      tags:
      - player
  /players/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Delete player
      tags:
      - player
    get:
      consumes:
      - application/json
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Player'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get player
      tags:
      - player
  /tables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Table'
            type: array
      summary: Get all tables
      tags:
      - table
  /tables/:
    post:
      consumes:
      - application/json
      parameters:
      - description: The table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/resources.CreateTableRepresentation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Table'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Create table
      tags:
      - table
  /tables/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Table'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get table
      tags:
      - table
  /tournaments:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tournament'
            type: array
      summary: Get all tournaments
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: The tournament
        in: body
        name: tournament
        required: true
        schema:
          $ref: '#/definitions/resources.TournamentCreateRepresentation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tournament'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Create tournament
      tags:
      - tournament
  /tournaments/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Remove tournament
      tags:
      - tournament
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tournament'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get tournament
      tags:
      - tournament
  /tournaments/{id}/events:
    get:
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/x-json-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resources.PlayerRepresenatation'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Opens a web socket for tournamnent player event
      tags:
      - tournament
  /tournaments/{id}/games:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameJson'
            type: array
      summary: Get all games in a tournament
      tags:
      - tournament
  /tournaments/{id}/games/random:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GameJson'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get random game for a tournament
      tags:
      - tournament
  /tournaments/{id}/players:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resources.PlayerRepresenatation'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get players in tournament
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: The tournament
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/resources.AddPlayer2TournamentRepresenatation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/resources.PlayerRepresenatation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Add player to tournament
      tags:
      - tournament
  /tournaments/{id}/players/{player}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Player ID
        in: path
        name: player
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Remove player from tournament
      tags:
      - tournament
  /tournaments/{id}/tables:
    get:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TournamentTable'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Get tables in a tournament
      tags:
      - tournament
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: The table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/resources.TableRepresentation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.TournamentTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Add table to tournament
      tags:
      - tournament
  /tournaments/{id}/tables/{table}/games:
    post:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Table ID
        in: path
        name: table
        required: true
        type: string
      - description: Submit game results
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/resources.GameRepresentation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameJson'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Submit gamne results
      tags:
      - tournament
  /tournaments/{id}/tables/{tableId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tournament ID
        in: path
        name: id
        required: true
        type: string
      - description: Table ID
        in: path
        name: tableId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resources.ErrorResponse'
      summary: Remove table from tournament
      tags:
      - tournament
swagger: "2.0"
